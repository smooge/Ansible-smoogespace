## Stolen from Fabian Arrotins CentOS playbooks
- name: Adding admin user personal group
  ansible.builtin.group:
    name: "{{ item.login_name }}"
    state: present 
  with_items: "{{ global_admins_list }}"
  loop_control:
    label: "{{ item.login_name }}"
  when: global_admins_list is defined
  tags:
    - admin

- name: Adding admin user[s]
  user: 
    name: "{{ item.login_name }}" 
    state: present 
    comment: "{{ item.full_name }}" 
    shell: "{{ item.shell }}"
    create_home: yes
    group: "{{ item.login_name }}"
    groups: wheel
    append: yes
  with_items: "{{ global_admins_list }}"
  when: global_admins_list is defined
  loop_control:
    label: "{{ item.login_name }}"
  tags:
    - admin

## Stolen from Fabian Arrotins CentOS playbooks
- name: Importing admin user[s] ssh pub keys
  authorized_key: 
    user: "{{ item.0.login_name }}" 
    key: "{{ item.1 }}"
  with_subelements:
   - "{{ global_admins_list }}"
   - ssh_pub_key
  when: global_admins_list is defined
  loop_control:
    label: "{{ item.0.login_name }}"
  tags:
    - admin
  
## Stolen from Fabian Arrotins CentOS playbooks
- name: Giving sudo access for admin users when needed
  template: 
    src: templates/sudofile.j2 
    dest: /etc/sudoers.d/{{ item.login_name }} 
    mode: 0440 
    owner: root 
    group: root
  with_items: "{{ global_admins_list }}"
  loop_control:
    label: "{{ item.login_name }}"
  when: global_admins_list is defined and item.sudo_right
  tags:
    - admin

- name: Adding additional users personal group
  ansible.builtin.group:
    name: "{{ item.login_name }}"
    state: present 
  with_items: "{{ local_users_list }}"
  loop_control:
    label: "{{ item.login_name }}"
  when: local_users_list is defined
  tags:
    - users
  
- name: Adding additional users
  user: 
    name: "{{ item.login_name }}"
    state: present 
    comment: "{{ item.full_name }}"
    group: "{{ item.group | default(item.login_name) }}"
    shell: /bin/bash
  with_items: "{{ local_users_list }}"
  loop_control:
    label: "{{ item.login_name }}"
  when: local_users_list is defined
  tags:
    - users

- name: Importing local users ssh pub keys
  authorized_key: 
    user: "{{ item.0.login_name }}"
    key: "{{ item.1 }}"
  with_subelements: 
    - "{{ local_users_list }}"
    - ssh_pub_key
  loop_control:
    label: "{{ item.0.login_name }}"
  when: local_users_list is defined
  tags:
    - users

- name: Giving sudo access when needed 
  template:  
    src: templates/sudofile.j2 
    dest: "/etc/sudoers.d/{{ item.login_name }}" 
    mode: 0440 
    owner: root 
    group: root
  with_items: "{{ local_users_list }}"
  when: 
    - local_users_list is defined
    - item.sudo_right 
  loop_control:
    label: "{{ item.login_name }}"
  tags:
    - users
